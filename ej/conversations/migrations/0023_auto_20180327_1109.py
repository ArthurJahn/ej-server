# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-27 14:09
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('conversations', '0022_rename_category_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='Stereotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='StereotypeVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(1, 'AGREE'), (0, 'PASS'), (-1, 'DISAGREE')], verbose_name='Value')),
            ],
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ('created_at',), 'verbose_name_plural': 'categories'},
        ),
        migrations.AlterModelOptions(
            name='conversation',
            options={'ordering': ('created_at',)},
        ),
        migrations.RemoveField(
            model_name='comment',
            name='polis_id',
        ),
        migrations.RemoveField(
            model_name='conversation',
            name='polis_id',
        ),
        migrations.RemoveField(
            model_name='conversation',
            name='polis_slug',
        ),
        migrations.RemoveField(
            model_name='conversation',
            name='polis_url',
        ),
        migrations.RemoveField(
            model_name='vote',
            name='polis_id',
        ),
        migrations.AlterField(
            model_name='category',
            name='customizations',
            field=jsonfield.fields.JSONField(default={}, verbose_name='Customizations'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(help_text='Unique category name. Hint: list of categories is public.', max_length=255, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='approval',
            field=models.CharField(choices=[('APPROVED', 'approved'), ('REJECTED', 'rejected'), ('UNMODERATED', 'awaiting moderation')], default='UNMODERATED', max_length=32, verbose_name='Approval'),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='comment_nudge',
            field=models.IntegerField(blank=True, help_text='Number of comments', null=True, verbose_name='Comment nudge'),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='comment_nudge_global_limit',
            field=models.IntegerField(blank=True, help_text='Global number of comments', null=True, verbose_name='Comment nudge global limit'),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='comment_nudge_interval',
            field=models.IntegerField(blank=True, help_text='Nudge interval in seconds', null=True, verbose_name='Comment nudge interval'),
        ),
        migrations.AddField(
            model_name='stereotypevote',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stereotype_votes', to='conversations.Comment'),
        ),
        migrations.AddField(
            model_name='stereotypevote',
            name='stereotype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stereotype_votes', to='conversations.Stereotype'),
        ),
        migrations.AddField(
            model_name='stereotype',
            name='conversations',
            field=models.ManyToManyField(related_name='conversations', to='conversations.Conversation'),
        ),
    ]
