# Generated by Django 2.0.5 on 2018-05-27 21:50

import autoslug.fields
import boogie.fields.enum_field
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import ej_conversations.models.conversation
import ej_conversations.models.vote
import ej_conversations.validators
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'awaiting moderation'), ('APPROVED', 'approved'), ('REJECTED', 'rejected')], default='PENDING', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('content', models.TextField(help_text='Body of text for the comment', max_length=140, validators=[django.core.validators.MinLengthValidator(2), ej_conversations.validators.is_not_empty], verbose_name='Content')),
                ('rejection_reason', models.TextField(blank=True, help_text='You must provide a reason to reject a comment. Users will receive this feedback.', verbose_name='Rejection reason')),
                ('is_promoted', models.BooleanField(default=False, help_text='Promoted comments are prioritized when selecting random commentsto users.', verbose_name='Promoted comment?')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('personal', 'Personal'), ('promoted', 'Promoted')], default='personal', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('question', models.TextField(help_text='A question that is displayed to the users in a conversation card. (e.g.: How can we improve the school system in our community?)', verbose_name='Question')),
                ('title', models.CharField(help_text='A short description about this conversations. This is used for internal referenceand to create URL slugs. (e.g. School system)', max_length=255, verbose_name='Title')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=ej_conversations.models.conversation.slug_base, unique=True)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='TaggedConversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('choice', boogie.fields.enum_field.EnumField(ej_conversations.models.vote.Choice, help_text='Agree, disagree or skip', verbose_name='Choice')),
            ],
        ),
    ]
