services:
  - docker:dind


# The pre-build part of the pipeline should be disabled most of the time!
stages:
  - pre-build
  - build
  - test
  - release


# Environment variables
variables:
  DOCKER_DRIVER: overlay2
  PREBUILD_VERSION: v1


# Reusable configurations
.container: &container
  image: $DOCKER_INVOKE
  before_script:
    - &login docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
  tags:
    - docker

.runner: &runner
  << : *container
  before_script:
    - inv -e docker-pull -t $CI_COMMIT_REF_SLUG --theme=$THEMES

.publisher: &publisher
  << : *container
  before_script:
    - *login
    - docker pull cdrx/rancher-gitlab-deploy
  script:
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service backend --sidekicks --no-finish-upgrade


# PRE-BUILD: the pre-build stage simply adds some utility images to DockerHub
# those images are used by other containers either in multi-stage builds or
# as the parent container of a build.
pre-build:
  image: docker
  script:
    - *login
    - sh etc/scripts/docker-images.sh $PREBUILD_VERSION



# BUILD: build and publish images using the CI_COMMIT_REF_SLUG.
# Those images will not be published under :latest and :tag automatically.
# Only master commits publish images under the :latest tags on dockerhub
# and commits with tags create tagged images.
build:
  << : *container
  script:
    - *login
    - inv -e docker-build -t $CI_COMMIT_REF_SLUG --theme=$THEMES
    - inv -e docker-push  -t $CI_COMMIT_REF_SLUG --theme=$THEMES


# TEST: test in different environments by changing the database or running a
# linter
test:sqlite3:
  << : *runner
  stage: test
  script:
    - inv -e docker-run --cmd test

test:postgres:
  << : *runner
  stage: test
  script:
    - inv -e docker-run -e dev --cmd test

test:lint:
  << : *runner
  stage: test
  script:
    - inv -e docker-run --cmd lint


# PUSH: commits on master
release:master:
  << : *publisher
  stage: release
  script:
    - inv -e docker-push --from $CI_COMMIT_REF_SLUG
    - inv -e rancher-push
  only:
    - master

release:tag:
  << : *publisher
  stage: release
  script:
    - inv -e docker-push --from $CI_COMMIT_REF_SLUG -t $CI_COMMIT_TAG
    - inv -e rancher-push -t $CI_COMMIT_TAG
  only:
    - tags
