services:
  - docker:dind

stages:
  - test
  - push
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: recursive
  DJANGO_MASTER_IMAGE: "ejplatform/ej-server:master"
  DJANGO_LATEST_IMAGE: "ejplatform/ej-server:latest"
  BACKEND_MASTER_IMAGE: "ejplatform/ej-nginx:master"
  BACKEND_LATEST_IMAGE: "ejplatform/ej-nginx:latest"
  CACHED_IMAGE: "${CI_COMMIT_SHA}.image.tar"
  DJANGO_TEST_ENV: "./docker/develop/env/django.test.env"
  POSTGRES_TEST_ENV: "./docker/develop/env/postgres.test.env"


#
# Testing
#

test:
  stage: test
  image: docker
  script:
    - docker pull $DJANGO_MASTER_IMAGE || true
    - docker build --cache-from $DJANGO_MASTER_IMAGE -t $DJANGO_MASTER_IMAGE -f ./docker/production/django/Dockerfile .
    - docker run -d --env-file=$POSTGRES_TEST_ENV --name=postgres postgres:9.6
    - docker run --env-file=$DJANGO_TEST_ENV --env-file=$POSTGRES_TEST_ENV --link=postgres:postgres $DJANGO_MASTER_IMAGE /test.sh
  tags:
    - docker

cache:image:
  stage: test
  image: ejplatform/ej-cicd:latest
  script:
    - docker pull $DJANGO_MASTER_IMAGE || true
    - docker build --cache-from $DJANGO_MASTER_IMAGE -t $DJANGO_MASTER_IMAGE -f ./docker/production/django/Dockerfile .
    - docker save $DJANGO_MASTER_IMAGE -o $CACHED_IMAGE
  only:
    - master
    - tags
  tags:
    - docker
  artifacts:
    expire_in: '20 mins'
    name: $CI_COMMIT_SHA
    paths:
      - $CACHED_IMAGE

#
# Pushing images to registry
#

.pusher: &pusher
  image: docker
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker load -i "${CI_COMMIT_SHA}.image.tar"
  tags:
    - docker
  dependencies:
    - cache:image

push:master:
  << : *pusher
  stage: push
  script:
    - docker build -t $BACKEND_MASTER_IMAGE -f ./docker/production/nginx/master.Dockerfile .
    - docker push $BACKEND_MASTER_IMAGE
    - docker push $DJANGO_MASTER_IMAGE
  only:
    - master

push:latest:
  << : *pusher
  stage: push
  script:
    - docker build -t $BACKEND_LATEST_IMAGE -f ./docker/production/nginx/latest.Dockerfile .
    - docker push $BACKEND_LATEST_IMAGE
    - docker push $DJANGO_LATEST_IMAGE
  only:
    - tags


#
# Rancher service upgrade
#

.deployer: &deployer
  image: cdrx/rancher-gitlab-deploy
  script:
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service backend --no-finish-upgrade --sidekicks
# [FIXME] Cancel celery upgrades for just now
#    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service flower --no-finish-upgrade
#    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service worker --no-finish-upgrade
  tags:
    - docker

deploy:master:
  << : *deployer
  stage: deploy
  environment: develop
  only:
    - master

deploy:latest:
  << : *deployer
  stage: deploy
  environment: production
  only:
    - tags
